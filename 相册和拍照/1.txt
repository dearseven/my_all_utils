1 修改AndroidManifest.xml
<application>
...
     <provider
                android:name="android.support.v4.content.FileProvider"
                android:authorities="cc.xxxx.fileprovider"//######################记得修改这个权限代码里使用的时候要用这个值
                android:exported="false"
                android:grantUriPermissions="true">
        <meta-data
                android:name="android.support.FILE_PROVIDER_PATHS"
                android:resource="@xml/filepaths" />
    </provider>
...
</application>
2 在res下新建一个目录xml然后建立文件filepaths.xml
<?xml version="1.0" encoding="utf-8"?>
<paths>
    <!--        xml文件是唯一设置分享的目录 ，不能用代码设置
         1.<files-path>        getFilesDir()  /data/data//files目录
         2.<cache-path>        getCacheDir()  /data/data//cache目录
         3.<external-path>     Environment.getExternalStorageDirectory()
         SDCard/Android/data/你的应用的包名/files/ 目录
         4.<external-files-path>     Context#getExternalFilesDir(String) Context.getExternalFilesDir(null).
         5.<external-cache-path>      Context.getExternalCacheDir().
     -->
    <!--    path :代表设置的目录下一级目录 eg：<external-path path="images/"
                整个目录为Environment.getExternalStorageDirectory()+"/images/"
            name: 代表定义在Content中的字段 eg：name = "myimages" ，并且请求的内容的文件名为default_image.jpg
                则 返回一个URI   content://com.example.myapp.fileprovider/myimages/default_image.jpg
    -->
    <!--当path 为空时 5个全配置就可以解决-->
    <!--下载apk-->
    <root-path
        name="root_path"
        path="." />
    <external-path
        name="sdcard_files"
        path="pic/for_temp//" />
    <!--相机相册裁剪-->
    <external-files-path
        name="camera_has_sdcard"
        path="pic/for_temp/" />
    <files-path
        name="camera_no_sdcard"
        path="pic/for_temp/" />
</paths>
这里用pic/for_temp/是因为代码里就是用这个目录啊~

//######################
3 大概在PicTaker...java的210多行有一段FileProvider.getUriForFile(...)记得修改他的权限代码

